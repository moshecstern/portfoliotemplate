{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Moshe Stern\\\\Documents\\\\CodingMo\\\\myProjects\\\\portfoliotemplate\\\\client\\\\src\\\\components\\\\pages\\\\Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js'; // import useAxios from \"axios-hooks\";\n\nimport Axios from \"axios\"; // import Card3 from '../layout/Card3'\n\nimport { TextField, Typography, Button, makeStyles, Paper, Modal, Fade, Backdrop // ListItemAvatar,\n// Avatar,\n// ListItemText,\n// Link\n} from \"@material-ui/core\"; // import AlertState from '../../context/alert/AlertState';\n\nconst stripePromise = loadStripe('pk_live_51GzAYhLa9svkYtX6ly1T2LWxFE5QI6qP0DQGZJvofGRV9tTEPXmvw5r39wb3qk58Gnc2mx0KRdwmFUOXO7rUnmbe00BE7qf6fC');\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    },\n    borderStyle: 'solid',\n    border: 1,\n    borderWidth: 'thick',\n    borderColor: theme.palette.primary.main,\n    margin: theme.spacing(6),\n    padding: theme.spacing(6),\n    minHeight: 400,\n    display: 'inline-grid' // width: theme.spacing(300),\n    //  alignItems: 'center'\n\n  },\n  theming: {\n    color: theme.palette.primary.dark\n  },\n  h1theme: {\n    color: theme.palette.secondary.dark,\n    paddingLeft: 40,\n    margin: 20,\n    marginTop: 40,\n    textAlign: 'center',\n    padding: 10,\n    [theme.breakpoints.down('md')]: {\n      fontSize: 50\n    }\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    height: '100%',\n    background: 'white',\n    margin: 30,\n    backgroundColor: theme.palette.primary.dark // marginTop: 40\n\n  },\n  secondaryheader: {\n    textAlign: 'center'\n  },\n  textField: {\n    backgroundColor: theme.palette.background.default\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n})); // function App() {\n\nconst Payment = () => {\n  _s();\n\n  const classes = useStyles(); //     const [open, setOpen] = useState(false);\n  //   async function handleOpen() {\n  //     setOpen(true);\n  //   }\n  //   async function handleCloseName(name){\n  //     setTherapist(name)\n  //     setOpen(false)\n  //   }\n  //   async function handleClose() {\n  //     setOpen(false);\n  //   }\n  //   async function openModalAdd() {\n  //     getStaffList()\n  //     console.log(\"clicked modal\")\n  //     handleOpen()\n  //   }\n  // const toCent = amount => amount * 100;\n\n  const [myQuantity, setMyQuantity] = useState();\n  const [patient, setPatient] = useState(\"\"); // const [Therapist, setTherapist] = useState('Please select your therapist');\n  // const [StaffList, setStaffList] = useState([]);\n  // const [relationship, setRelationship] = useState(\"\");\n  //   async function getStaffList(event) {\n  //     Axios.get('/api/staff/bynameall')\n  //     .then(res => {\n  //       const mydata = res.data;\n  //       setStaffList(mydata)\n  //       console.log(StaffList)\n  //     })\n  //     .catch(err => alert(err));\n  //     // setAnchorEl(event.currentTarget);\n  //     }\n\n  const myDesc = 'name:  ' + patient;\n\n  const handleClick = async event => {\n    //   if(patient !== \"\" && patient.length > 1 && Therapist !== null ){\n    // When the customer clicks on the button, redirect them to Checkout.\n    // console.log(Therapist + \"therapist name && my Desc: \" + myDesc)\n    const stripe = await stripePromise;\n    const {\n      error\n    } = await stripe.redirectToCheckout({\n      // product: [\n      // ],\n      // item: [{}],\n      // items: [{sku: myDesc}],\n      // paymentIntentData: {metadata:{myDesc}},\n      clientReferenceId: myDesc,\n      // payment_intent_data : [{description: myDesc}],\n      lineItems: [// Replace with the ID of your price\n      // price_1H0IwcLa9svkYtX6HWZ7vWE7\n      // price_1GzZ1mLa9svkYtX6p7QAvgYj\n      {\n        price: 'price_1H0YICLa9svkYtX6IrLCR1XH',\n        quantity: parseInt(myQuantity)\n      }],\n      mode: 'payment',\n      successUrl: 'http://localhost:3000/success',\n      cancelUrl: 'http://localhost:3000/payfail' // billingAddressCollection: 'required',\n      // description: 'patients name:  '+ patient +'by '+ relationship\n\n    }); // If `redirectToCheckout` fails due to a browser or network\n    // error, display the localized error message to your customer\n    // using `error.message`.\n    // }else{\n    //   alert(\"Please fill out who you are paying for and therapists name\")\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      component: \"h2\",\n      className: classes.h1theme,\n      children: \"Safely & Securely Make a Payment or Donation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 4,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Amount\" // id=\"margin-none number\"\n          ,\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          className: classes.textField,\n          value: myQuantity,\n          onChange: e => setMyQuantity(e.target.value) // onChange={(event, myQuantity) => setMyQuantity(myQuantity)}\n          // helperText=\"for future search results\"\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Name\" // id=\"margin-none\"\n          ,\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          className: classes.textField,\n          value: patient,\n          onChange: e => setPatient(e.target.value) // helperText=\"for future search results\"\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          role: \"link\",\n          variant: \"contained\",\n          onClick: handleClick,\n          children: \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Payment, \"2C/jNGRQ/V+/esYhXtg3eFwmOQc=\", false, function () {\n  return [useStyles];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["C:/Users/Moshe Stern/Documents/CodingMo/myProjects/portfoliotemplate/client/src/components/pages/Payment.js"],"names":["React","useState","useEffect","loadStripe","Axios","TextField","Typography","Button","makeStyles","Paper","Modal","Fade","Backdrop","stripePromise","useStyles","theme","root","margin","spacing","width","borderStyle","border","borderWidth","borderColor","palette","primary","main","padding","minHeight","display","theming","color","dark","h1theme","secondary","paddingLeft","marginTop","textAlign","breakpoints","down","fontSize","paper","text","height","background","backgroundColor","secondaryheader","textField","default","Payment","classes","myQuantity","setMyQuantity","patient","setPatient","myDesc","handleClick","event","stripe","error","redirectToCheckout","clientReferenceId","lineItems","price","quantity","parseInt","mode","successUrl","cancelUrl","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n// import useAxios from \"axios-hooks\";\r\nimport Axios from \"axios\";\r\n// import Card3 from '../layout/Card3'\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  makeStyles,\r\n  Paper,\r\n  Modal,\r\n  Fade,\r\n  Backdrop\r\n    // ListItemAvatar,\r\n  // Avatar,\r\n  // ListItemText,\r\n  // Link\r\n} from \"@material-ui/core\";\r\n// import AlertState from '../../context/alert/AlertState';\r\nconst stripePromise = loadStripe('pk_live_51GzAYhLa9svkYtX6ly1T2LWxFE5QI6qP0DQGZJvofGRV9tTEPXmvw5r39wb3qk58Gnc2mx0KRdwmFUOXO7rUnmbe00BE7qf6fC');\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n    borderStyle: 'solid',\r\n    border: 1,\r\n    borderWidth: 'thick',\r\n    borderColor : theme.palette.primary.main,\r\n    margin: theme.spacing(6),\r\n    padding: theme.spacing(6),\r\n    minHeight: 400,\r\n    display: 'inline-grid'\r\n    // width: theme.spacing(300),\r\n\r\n  //  alignItems: 'center'\r\n  },\r\n  theming: {\r\n    color: theme.palette.primary.dark\r\n  },\r\n  h1theme: {\r\n    color: theme.palette.secondary.dark,\r\n    paddingLeft: 40,\r\n    margin: 20,\r\n    marginTop: 40,\r\n    textAlign: 'center',\r\n    padding: 10,\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: 50,\r\n    }\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    height: '100%',\r\n    background: 'white',\r\n    margin: 30,\r\n    backgroundColor: theme.palette.primary.dark\r\n    // marginTop: 40\r\n  },\r\n  secondaryheader: {\r\n    textAlign: 'center',\r\n    \r\n  },\r\n  textField: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n// function App() {\r\n  const Payment = () => {\r\n    const classes = useStyles();\r\n\r\n//     const [open, setOpen] = useState(false);\r\n//   async function handleOpen() {\r\n//     setOpen(true);\r\n//   }\r\n//   async function handleCloseName(name){\r\n//     setTherapist(name)\r\n//     setOpen(false)\r\n//   }\r\n//   async function handleClose() {\r\n//     setOpen(false);\r\n//   }\r\n//   async function openModalAdd() {\r\n//     getStaffList()\r\n//     console.log(\"clicked modal\")\r\n//     handleOpen()\r\n//   }\r\n    // const toCent = amount => amount * 100;\r\n    const [myQuantity, setMyQuantity] = useState();\r\n    const [patient, setPatient] = useState(\"\");\r\n    // const [Therapist, setTherapist] = useState('Please select your therapist');\r\n    // const [StaffList, setStaffList] = useState([]);\r\n    // const [relationship, setRelationship] = useState(\"\");\r\n//   async function getStaffList(event) {\r\n//     Axios.get('/api/staff/bynameall')\r\n//     .then(res => {\r\n//       const mydata = res.data;\r\n//       setStaffList(mydata)\r\n//       console.log(StaffList)\r\n//     })\r\n//     .catch(err => alert(err));\r\n//     // setAnchorEl(event.currentTarget);\r\n//     }\r\n    const myDesc = 'name:  '+ patient;\r\n    \r\n    const handleClick = async (event) => {\r\n    //   if(patient !== \"\" && patient.length > 1 && Therapist !== null ){\r\n        // When the customer clicks on the button, redirect them to Checkout.\r\n        // console.log(Therapist + \"therapist name && my Desc: \" + myDesc)\r\n        const stripe = await stripePromise;\r\n        const { error } = await stripe.redirectToCheckout({\r\n        // product: [\r\n        // ],\r\n        // item: [{}],\r\n        // items: [{sku: myDesc}],\r\n        \r\n        // paymentIntentData: {metadata:{myDesc}},\r\n        clientReferenceId: myDesc,\r\n        // payment_intent_data : [{description: myDesc}],\r\n        lineItems: [\r\n          // Replace with the ID of your price\r\n          // price_1H0IwcLa9svkYtX6HWZ7vWE7\r\n          // price_1GzZ1mLa9svkYtX6p7QAvgYj\r\n          {price: 'price_1H0YICLa9svkYtX6IrLCR1XH', quantity: parseInt(myQuantity)}\r\n        ],\r\n        mode: 'payment',\r\n        successUrl: 'http://localhost:3000/success',\r\n        cancelUrl: 'http://localhost:3000/payfail',\r\n        \r\n        // billingAddressCollection: 'required',\r\n        // description: 'patients name:  '+ patient +'by '+ relationship\r\n      });\r\n      // If `redirectToCheckout` fails due to a browser or network\r\n      // error, display the localized error message to your customer\r\n      // using `error.message`.\r\n    // }else{\r\n    //   alert(\"Please fill out who you are paying for and therapists name\")\r\n      \r\n    // }\r\n    };\r\n\r\n    \r\n    \r\n  return (\r\n    <>\r\n    <Typography variant=\"h1\" component=\"h2\" className={classes.h1theme}>\r\n  Safely & Securely Make a Payment or Donation\r\n</Typography>\r\n<Paper className={classes.paper} elevation={4}>\r\n\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n      <TextField\r\n          label=\"Amount\"\r\n          // id=\"margin-none number\"\r\n          id=\"outlined-basic\"\r\n          variant=\"outlined\"\r\n          className={classes.textField}\r\n          value={myQuantity}\r\n          onChange={(e)=> setMyQuantity(e.target.value)}\r\n          // onChange={(event, myQuantity) => setMyQuantity(myQuantity)}\r\n          // helperText=\"for future search results\"\r\n        />\r\n          <TextField\r\n          label=\"Name\"\r\n          // id=\"margin-none\"\r\n          id=\"outlined-basic\"\r\n          variant=\"outlined\"\r\n          className={classes.textField}\r\n          value={patient}\r\n          onChange={(e)=> setPatient(e.target.value)}\r\n          // helperText=\"for future search results\"\r\n        />\r\n        \r\n\r\n          \r\n    <Button role=\"link\" variant=\"contained\" onClick={handleClick}>\r\n      Checkout\r\n    </Button>\r\n    </form>\r\n    \r\n    </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Payment;"]},"metadata":{},"sourceType":"module"}